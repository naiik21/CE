datos = read.csv('student-mat.csv')
head(datos)
install.packages('ggplot2')
install.packages('ggthemes')
install.packages('dplyr')
library(ggplot2)
library(ggthemes)
library(dplyr)
columnas.numericas= sapply(datos, is.numeric)
head(columnas.numericas)
datos.correlacion= cor(datos[,columnas.numericas])
print(datos.correlacion)
install.packages("corrgram")
install.packages("corrplot")
library(corrplot)
library(corrgram)
grafico = corrplot(datos.correlacion, method='color')
gc()
vector = 1:10
vector
matriz = matrix(vector)
matriz
matriz = matrix(vector, nrow=2)
matriz
matriz
empresa1 = c(100,80,90)
empresa2 = c(50,120,80)
ventas = c(empresa1, empresa2)
ventas
matriz.ventas = matrix(ventas, nrow=2, byrow=TRUE)
matriz.ventas
meses= c('enero', 'febrero', 'marzo')
colnames(matriz.ventas)=meses
matriz.ventas
empresas=c('empresa1', 'empresa2')
rownames(matriz.ventas) =empresas
matriz.ventas
matriz=matrix(1:16, nrow=4, byrow=TRUE)
matriz
matriz +5
matriz -5
matriz
matriz=matriz*2
matriz
matriz=matriz/2
matriz
matriz * matriz
matriz^2
matriz= matriz * matriz
matriz>100
matriz
matriz>100
filtro = matriz>100
matriz[filtro]
empresa1= c(40,160,120)
empresa2= c(100,140,90)
ventas=c(empresa1, empresa2)
matriz= matrix(ventas, byrow=T, nrow=2)
matriz
meses= c('enero', 'febrero', 'marzo')
empresas= c('empresa1', 'empresa2')
colnames(matriz)=meses
rownames(matriz)=empresas
matriz
colSums(matriz)
rowSums(matriz)
rowMeans(matriz)
empresa3= c(80,120,110)
matriz=rbind(matriz, empresa3)
matriz
media= rowMeans(matriz)
media
matriz=cbind(matriz, media)
matriz
matriz= matrix(1:25, byrow = T, nrow=5)
matriz
matriz[1,1]
matriz[5,3]
matriz[1,]
matriz[,1]
animales= c('perro', 'gato', 'mono', 'perro', 'gato')
animales
factor(animales)
summary(factor(animales))
install.packages('ggplot2movies')
library(ggplot2movies)
pelicules=movies
head(movies)
head(pelicules)
peliculas[c('title', 'year, 'rating)]
peliculas[c('title', 'year, 'rating')]
peliculas[c('title', 'year', 'rating')]
pelicules[c('title', 'year', 'rating')]
datos=ggplot(pelicules, aes(x=rating))
histograma= datos + geom_histogram()
print(histograma)
histograma= datos + geom_histogram(binwidth = 0.3)
print(histograma)
histograma= datos + geom_histogram(binwidth = 0.3, color='green')
print(histograma)
histograma= datos + geom_histogram(binwidth = 0.3, color='red')
print(histograma)
histograma= datos + geom_histogram(binwidth = 0.3, color='red', fill='blue')
print(histograma)
histograma= datos + geom_histogram(binwidth = 0.3, color='red', fill='blue', alpha;0.5)
histograma= datos + geom_histogram(binwidth = 0.3, color='red', fill='blue', alpha:0.5)
histograma= datos + geom_histogram(binwidth = 0.3, color='red', fill='blue', alpha=0.5)
print(histograma)
histograma= histograma + xlab('Puntuacion') + ylab('Frecuencia') + ggtitle('Histograma')
print(histograma)
library(ggplot2)
coches = mtcars
head(coches)
grafico = ggplot(coches, aes(x=disp, y=mpg))
grafico = gtrafico + geom_point()
grafico = grafico + geom_point()
print(grafico)
grafico = grafico + geom_point(size=8, alpha=0.5)
print(grafico)
grafico = grafico + geom_point(size=8, alpha=0.5, color='blue')
print(grafico)
grafico = grafico + geom_point(aes(size=wt))
print(grafico)
grafico = ggplot(coches, aes(x=disp, y=mpg))
grafico = grafico + geom_point(size=8, aes(color=hp))
grafico = grafico + scale_color_gradient(low='blue', high = 'red')
print(grafico)
datos =mpg
head(datos)
grafico= grafico + geom_bar(aes(fill = drv))
print(grafico)
datos= read.csv('titanic.csv')
datos= read.csv('titanic.csv')
cd ..
datos= read.csv('titanic.csv')
datos= read.csv('titanic.csv')
setwd("~/Escritorio/CE/BigData/R/proyecto5")
datos= read.csv('titanic.csv')
head(datos)
str(datos)
library(ggplot2)
ggplot(datos, aes(survived)) + geom_bar()
ggplot(datos,aes(survived)) + geom_bar()
ggplot(datos,aes(Survived)) + geom_bar()
ggplot(datos,aes(Pclass)) + geom_bar()
ggplot(datos,aes(Age)) + geom_bar()
ggplot(datos,aes(Pclass, Age))
grafico = grafico + geom_boxplot(aes(group=Pclass, fill=factor(Pclass)))
print(grafico)
install.packages('Amelia')
library(Amelia)
missmap(datos, main = "verificar vaolres nulos", col = c('red', 'black'))
limpiar.edad <- function(edad, clase) {
salida = edad
for( i in 1:length(edad)){
if(is.na(edad[i])){
if(clase[i] == 1 ){
salida[i] = 38
}else if(clase[i] == 2){
salida[i] = 29
}else{
salida[i] = 23
}
}else{
salida[i] = edad[i]
}
}
return(salida)
}
edades = edad(datos$Age, datos$Pclass)
edades = edad (datos$Age, datos$Pclass)
grafico = grafico.base + geom_boxplot(aes(group=Pclass, fill=factor(Pclass), alpha=0.5))
grafico.base = ggplot(datos, aes(Pclass, Age))
grafico = grafico.base + geom_boxplot(aes(group=Pclass, fill=factor(Pclass), alpha=0.5))
print(grafico)
limpiar.edad <- function(edad, clase) {
salida = edad
for( i in 1:length(edad)){
if(is.na(edad[i])){
if(clase[i] == 1 ){
salida[i] = 38
}else if(clase[i] == 2){
salida[i] = 29
}else{
salida[i] = 23
}
}else{
salida[i] = edad[i]
}
}
return(salida)
}
edades = limpiar.edad(datos$Age, datos$Pclass)
datos$Age = edades
missmap(datos, main="Verificar valores nulos", col=c('red', 'black'))
library(dplyr)
head(datos)
datos = select(datos, -PassengerId, -Name, -Ticket, -Cabin)
head(datos)
datos$Survived = factor(datos$Survived)
datos$Pclass = factor(datos$Pclass)
datos$Parch = factor(datos$Parch)
datos$SibSp = factor(datos$SibSp)
str(datos)
library(caTools)
